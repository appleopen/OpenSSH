
SSH-AGENT(1)                System Reference Manual               SSH-AGENT(1)

NAME
     ssh-agent - authentication agent

SYNOPSIS
     ssh-agent [-c | -s] [-k] [command [args ...]]

DESCRIPTION
     ssh-agent is a program to hold private keys used for public key authenti-
     cation (RSA, DSA).  The idea is that ssh-agent is started in the begin-
     ning of an X-session or a login session, and all other windows or pro-
     grams are started as clients to the ssh-agent program.  Through use of
     environment variables the agent can be located and automatically used for
     authentication when logging in to other machines using ssh(1).

     The options are as follows:

     -c      Generate C-shell commands on stdout. This is the default if SHELL
             looks like it's a csh style of shell.

     -s      Generate Bourne shell commands on stdout. This is the default if
             SHELL does not look like it's a csh style of shell.

     -k      Kill the current agent (given by the SSH_AGENT_PID environment
             variable).

     If a commandline is given, this is executed as a subprocess of the agent.
     When the command dies, so does the agent.

     The agent initially does not have any private keys.  Keys are added using
     ssh-add(1).  When executed without arguments, ssh-add(1) adds the
     $HOME/.ssh/identity file.  If the identity has a passphrase, ssh-add(1)
     asks for the passphrase (using a small X11 application if running under
     X11, or from the terminal if running without X).  It then sends the iden-
     tity to the agent.  Several identities can be stored in the agent; the
     agent can automatically use any of these identities.  ssh-add -l displays
     the identities currently held by the agent.

     The idea is that the agent is run in the user's local PC, laptop, or ter-
     minal.  Authentication data need not be stored on any other machine, and
     authentication passphrases never go over the network.  However, the con-
     nection to the agent is forwarded over SSH remote logins, and the user
     can thus use the privileges given by the identities anywhere in the net-
     work in a secure way.

     There are two main ways to get an agent setup: Either you let the agent
     start a new subcommand into which some environment variables are export-
     ed, or you let the agent print the needed shell commands (either sh(1) or
     csh(1) syntax can be generated) which can be evalled in the calling
     shell.  Later ssh(1) look at these variables and use them to establish a
     connection to the agent.

     A unix-domain socket is created (/tmp/ssh-XXXXXXXX/agent.<pid>), and the
     name of this socket is stored in the SSH_AUTH_SOCK environment variable.
     The socket is made accessible only to the current user.  This method is
     easily abused by root or another instance of the same user.

     The SSH_AGENT_PID environment variable holds the agent's PID.

     The agent exits automatically when the command given on the command line
     terminates.

FILES


     $HOME/.ssh/identity
             Contains the RSA authentication identity of the user.  This file
             should not be readable by anyone but the user.  It is possible to
             specify a passphrase when generating the key; that passphrase
             will be used to encrypt the private part of this file.  This file
             is not used by ssh-agent but is normally added to the agent using
             ssh-add(1) at login time.

     $HOME/.ssh/id_dsa
             Contains the DSA authentication identity of the user.
             (/tmp/ssh-XXXXXXXX/agent.<pid>), Unix-domain sockets used to con-
             tain the connection to the authentication agent.  These sockets
             should only be readable by the owner.  The sockets should get au-
             tomatically removed when the agent exits.

AUTHOR
     Tatu Ylonen <ylo@cs.hut.fi>

     OpenSSH is a derivative of the original (free) ssh 1.2.12 release, but
     with bugs removed and newer features re-added.  Rapidly after the 1.2.12
     release, newer versions bore successively more restrictive licenses.
     This version of OpenSSH

     o   has all components of a restrictive nature (i.e., patents, see
         crypto(3))  directly removed from the source code; any licensed or
         patented components are chosen from external libraries.

     o   has been updated to support ssh protocol 1.5.

     o   contains added support for kerberos(8) authentication and ticket
         passing.

     o   supports one-time password authentication with skey(1).

SEE ALSO
     ssh(1),  ssh-add(1),  ssh-keygen(1),  sshd(8),  crypto(3)

BSD Experimental              September 25, 1999                             2
